{"ast":null,"code":"import _classCallCheck from \"/Users/araltasher/coding_proj/pics_react-redux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/araltasher/coding_proj/pics_react-redux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/araltasher/coding_proj/pics_react-redux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/araltasher/coding_proj/pics_react-redux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/araltasher/coding_proj/pics_react-redux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/araltasher/coding_proj/pics_react-redux/src/components/ImageCard.js\";\nimport React, { Component } from \"react\";\n\nvar ImageCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageCard, _Component);\n\n  function ImageCard(props) {\n    var _this;\n\n    _classCallCheck(this, ImageCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageCard).call(this, props));\n\n    _this.setSpans = function () {\n      var height = _this.imageRef.current.clientHeight;\n      var spans = Math.ceil(height / 10);\n\n      _this.setState({\n        spans: spans\n      });\n    };\n\n    _this.state = {\n      spans: 0\n    };\n    _this.imageRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(ImageCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.imageRef.current.addEventListener(\"load\", this.setSpans);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$image = this.props.image,\n          description = _this$props$image.description,\n          urls = _this$props$image.urls;\n      return React.createElement(\"div\", {\n        style: {\n          gridRowEnd: \"span \".concat(this.state.spans)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: urls.regular,\n        alt: description,\n        ref: this.imageRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ImageCard;\n}(Component);\n\nexport default ImageCard;","map":{"version":3,"sources":["/Users/araltasher/coding_proj/pics_react-redux/src/components/ImageCard.js"],"names":["React","Component","ImageCard","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","state","createRef","addEventListener","image","description","urls","gridRowEnd","regular"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAMnBC,QANmB,GAMR,YAAM;AACf,UAAMC,MAAM,GAAG,MAAKC,QAAL,CAAcC,OAAd,CAAsBC,YAArC;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUN,MAAM,GAAG,EAAnB,CAAd;;AACA,YAAKO,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,KAVkB;;AAEjB,UAAKI,KAAL,GAAa;AAACJ,MAAAA,KAAK,EAAE;AAAR,KAAb;AACA,UAAKH,QAAL,GAAgBN,KAAK,CAACc,SAAN,EAAhB;AAHiB;AAIlB;;;;wCAQmB;AAClB,WAAKR,QAAL,CAAcC,OAAd,CAAsBQ,gBAAtB,CAAuC,MAAvC,EAA+C,KAAKX,QAApD;AACD;;;6BAEQ;AAAA,8BACuB,KAAKD,KAAL,CAAWa,KADlC;AAAA,UACCC,WADD,qBACCA,WADD;AAAA,UACcC,IADd,qBACcA,IADd;AAEP,aACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,iBAAU,KAAKN,KAAL,CAAWJ,KAArB;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAES,IAAI,CAACE,OAAf;AAAwB,QAAA,GAAG,EAAEH,WAA7B;AAA0C,QAAA,GAAG,EAAE,KAAKX,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAxBqBL,S;;AA2BxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass ImageCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {spans: 0};\n    this.imageRef = React.createRef();\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n    const spans = Math.ceil(height / 10);\n    this.setState({ spans });\n  };\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n\n  render() {\n    const { description, urls } = this.props.image;\n    return (\n      <div style={{gridRowEnd: `span ${this.state.spans}`}}>\n        <img src={urls.regular} alt={description} ref={this.imageRef} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n"]},"metadata":{},"sourceType":"module"}